{"version":3,"file":"sys-configs.js","sourceRoot":"","sources":["../../src/sys-configs.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAYjC;iDACiD;AACjD,qBAA4B,YAAoB,IAAI;IAChD,MAAM,CAAC;QACH,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,OAAO,CAAC;QACrC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,OAAO,CAAC;QACrC,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,WAAW,CAAC;QAC7C,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,WAAW,CAAC;QAC7C,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,WAAW,CAAC;QAC7C,cAAc,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,iBAAiB,CAAC;KAC5D,CAAC;AACN,CAAC;AATD,kCASC","sourcesContent":["import * as config from \"config\";\nimport {DriverType} from \"typeorm/driver/DriverOptions\";\n\nexport interface IDbConfig {\n    type: DriverType;\n    host: string;\n    database: string;\n    username: string;\n    password: string;\n    autoSchemaSync: boolean;\n}\n\n/** 获取数据库配置.\n *  @param dbSetting 在配置文件中数据库配置对象的名称，默认为 `db` */\nexport function getDbConfig(dbSetting: string = \"db\"): IDbConfig {\n    return {\n        type: config.get(`${dbSetting}.type`),\n        host: config.get(`${dbSetting}.host`),\n        database: config.get(`${dbSetting}.database`),\n        username: config.get(`${dbSetting}.username`),\n        password: config.get(`${dbSetting}.password`),\n        autoSchemaSync: config.get(`${dbSetting}.autoSchemaSync`)\n    };\n}\n"]}