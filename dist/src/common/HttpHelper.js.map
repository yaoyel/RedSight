{"version":3,"file":"HttpHelper.js","sourceRoot":"","sources":["../../../src/common/HttpHelper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,4BAA0B;AAC1B,mCAA+B;AAC/B,2CAAgC;AAGhC,IAAa,UAAU,GAAvB;IACU,QAAQ,CAAC,GAAW,EAAE,IAAa,EAAE,gBAAyB;;YAEhE,IAAI,OAAO,GAAG;gBACV,cAAc,EAAE,kBAAkB;aACrC,CAAC;YAEF,EAAE,CAAC,CAAC,gBAAgB,CAAC;gBACjB,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;YAE7C,MAAM,CAAC,oBAAK,CAAC,GAAG,EAAE;gBACd,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI;aAC7C,CAAC,CAAC;QAEP,CAAC;KAAA;CACJ,CAAA;AAjBY,UAAU;IADtB,gBAAO,EAAE;GACG,UAAU,CAiBtB;AAjBY,gCAAU","sourcesContent":["import \"reflect-metadata\";\nimport {Service} from \"typedi\";\nimport fetch from  \"node-fetch\";\n\n@Service()\nexport class HttpHelper {\n    async postJson(url: string, data?: Object, extensionHeaders?: Object): Promise<any> {\n\n        let headers = {\n            \"Content-Type\": \"application/json\"\n        };\n\n        if (extensionHeaders)\n            Object.assign(headers, extensionHeaders);\n\n        return fetch(url, {\n            method: \"POST\",\n            headers: headers,\n            body: !!data ? JSON.stringify(data) : null\n        });\n\n    }\n}"]}