{"version":3,"file":"SmsServerHelper.js","sourceRoot":"","sources":["../../../src/common/SmsServerHelper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,4BAA0B;AAC1B,mCAAuC;AACvC,6CAAwC;AACxC,2BAA2B;AAC3B,6BAA8B;AAG9B,IAAa,eAAe,GAA5B;IAOI,YAA6B,YAAwB,EAAqC,QAAa;QAA1E,iBAAY,GAAZ,YAAY,CAAY;QAAqC,aAAQ,GAAR,QAAQ,CAAK;QACnG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACvE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IAGY,cAAc,CAAC,WAAmB;;YAC3C,MAAM,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAC5E,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAC,iBAAiB,EAAE,WAAW,EAAC,EAAE;gBAC/E,SAAS,EAAE,IAAI,CAAC,OAAO;gBACvB,UAAU,EAAE,IAAI,CAAC,QAAQ;aAC5B,CAAC,CAAC,IAAI,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC;iBACG,KAAK,CAAC;gBACH,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;QACX,CAAC;KAAA;IAEY,aAAa,CAAC,WAAmB,EAAE,OAAe;;YAC3D,MAAM,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;YAEjH,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE;gBACpE,SAAS,EAAE,IAAI,CAAC,OAAO;gBACvB,UAAU,EAAE,IAAI,CAAC,QAAQ;aAC5B,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC;YAChB,MAAM,CAAC,KAAK,CAAC;QAEjB,CAAC;KAAA;CACJ,CAAA;AA1CY,eAAe;IAD3B,gBAAO,EAAE;IAQkD,WAAA,eAAM,CAAC,QAAQ,CAAC,CAAA;qCAA7B,uBAAU;GAP5C,eAAe,CA0C3B;AA1CY,0CAAe","sourcesContent":["import \"reflect-metadata\";\nimport {Service, Inject} from \"typedi\";\nimport {HttpHelper} from \"./HttpHelper\";\nimport * as url from \"url\";\nimport * as util from  \"util\";\n\n@Service()\nexport class SmsServerHelper {\n    private readonly m_baseUrl: string;\n    private readonly m_requestSmsCodeUrl: string;\n    private readonly m_veritySmsCodeUrl: string;\n    private readonly m_appId: string;\n    private readonly m_appKey: string\n\n    constructor(private readonly m_httpHelper: HttpHelper, @Inject(\"config\") private readonly m_config: any) {\n        this.m_baseUrl = m_config.get(\"Lc.urls.base\");\n        this.m_requestSmsCodeUrl = this.m_config.get(\"Lc.urls.requestSmsCode\");\n        this.m_veritySmsCodeUrl = this.m_config.get(\"Lc.urls.veritySmsCode\");\n        this.m_appId = this.m_config.get(\"Lc.appId\");\n        this.m_appKey = this.m_config.get(\"Lc.appKey\");\n    }\n\n\n    public async RequestSmsCode(phoneNumber: string): Promise<boolean> {\n        const reqSmsCodeUrl = url.resolve(this.m_baseUrl, this.m_requestSmsCodeUrl);\n        return this.m_httpHelper.postJson(reqSmsCodeUrl, {mobilePhoneNumber: phoneNumber}, {\n            \"X-LC-Id\": this.m_appId,\n            \"X-LC-Key\": this.m_appKey\n        }).then(() => {\n            return true;\n        })\n            .catch(() => {\n                return false;\n            });\n    }\n\n    public async VeritySmsCode(phoneNumber: string, smsCode: string): Promise<boolean> {\n        const veritySmsCodeUrl = url.resolve(this.m_baseUrl, util.format(this.m_veritySmsCodeUrl, smsCode, phoneNumber));\n\n        let response = await this.m_httpHelper.postJson(veritySmsCodeUrl, null, {\n            \"X-LC-Id\": this.m_appId,\n            \"X-LC-Key\": this.m_appKey\n        });\n\n        if (response.status === 200)\n            return true;\n        return false;\n\n    }\n}\n"]}