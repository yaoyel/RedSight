{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/webapi/utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,+BAA0B;AAC1B,2BAA4B;AAC5B,+CAA0C;AAC1C,uCAAoC;AAEpC,wBAAsC,YAAoB,KAAK;;QAC3D,MAAM,cAAc,GAAG,WAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,GAAG,aAAa,GAAG,YAAY,CAAC,CAAC;QACpH,MAAM,aAAa,GAAG,oBAAS,CAAC,aAAQ,CAAC,CAAC;QAE1C,MAAM,CAAC,MAAM,aAAa,CAAC,cAAc,CAAC,CAAC;IAC/C,CAAC;CAAA;AALD,wCAKC;AAED,iBAA8B,IAAY,EAAE,SAAkB,EAAE,SAAkB;;QAC9E,MAAM,IAAI,GAAG,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,mBAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC;QAEvD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;CAAA;AALD,0BAKC;AAGD,mBAAgC,KAAa;;QACzC,MAAM,cAAc,GAAG,oBAAS,CAAC,qBAAM,CAAC,CAAC;QACzC,MAAM,IAAI,GAAG,MAAM,cAAc,EAAE,CAAC;QACpC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;CAAA;AAJD,8BAIC;AACD;;;;;;;;;GASG","sourcesContent":["import {join} from \"path\";\nimport {readFile} from \"fs\";\nimport {sign, verify} from \"jsonwebtoken\";\nimport  {promisify} from \"bluebird\";\n\nexport async function  loadSecretFile(isPrivate: boolean= false): Promise<Buffer> {\n    const secretFilePath = join(__dirname, \"..\", \"..\", \"..\", \"config\", \"ssl\", isPrivate ? \"private.key\" : \"public.pem\");\n    const loadFileAsync = promisify(readFile);\n\n    return await loadFileAsync(secretFilePath);\n}\n\nexport async function signJwt(data: object, expiresIn?: string, algorithm?: string): Promise<string> {\n    const cert = await loadSecretFile(true);\n    const token = sign(data, cert, {algorithm, expiresIn});\n\n    return token;\n}\n\n\nexport async function verifyJwt(token: string): Promise<any> {\n    const verityJwtAsync = promisify(verify);\n    const cert = await loadSecretFile();\n    return verityJwtAsync(token, cert);\n}\n/*\n\nexport async function readStreamAsJSON(stream):Promise<string>{\n    let data=\"\";\n    stream.on(\"data\",chunk=>data+=chunk);\n    stream.on(\"end\",()=>{\n        let result,error;\n        result=JSON.parse(data);\n    });\n}*/\n"]}