{"version":3,"file":"sys-config.test.js","sourceRoot":"","sources":["../../tests/sys-config.test.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qCAAyC;AAEzC,oDAA+C;AAE/C,QAAQ,CAAC,YAAY,EAAE;IACnB,QAAQ,CAAC,aAAa,EAAE;QACpB,EAAE,CAAC,2BAA2B,EAAE;YAC5B,IAAI,CAAC,GAAG,yBAAW,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gCAAgC,EAAE;QACvC,0BAAgB,CAAC;YACb,MAAM,EAAE,yBAAW,EAAE;YACrB,cAAc,EAAE,KAAK;YACrB,QAAQ,EAAE,EAAE;SACf,CAAC,CAAC,IAAI,CAAC,CAAM,UAAU;YACpB,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC,CAAA,CAAC,CAAC,KAAK,CAAC,MAAM;YACX,IAAI,CAAC,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import {createConnection} from \"typeorm\";\n\nimport {getDbConfig} from \"../src/sys-configs\";\n\ndescribe(\"sys-config\", () => {\n    describe(\"getDbConfig\", () => {\n        it(\"returns the configuration\", () => {\n            let c = getDbConfig(\"db\");\n            expect(c.type).not.toBeUndefined();\n        });\n    });\n    describe(\"database should be connectible\", () => {\n        createConnection({\n            driver: getDbConfig(),\n            autoSchemaSync: false,\n            entities: []\n        }).then(async connection => {\n            await connection.close();\n        }).catch(reason => {\n            fail(reason);\n        });\n    });\n});"]}