{"version":3,"file":"ResultWarpperMiddleware.js","sourceRoot":"","sources":["../../../../src/webapi/middlewares/ResultWarpperMiddleware.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,6DAAuE;AACvE,qDAAgD;AAChD,gDAA2C;AAI3C,IAAa,uBAAuB,GAApC;IACI,YAA6B,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;IAC7C,CAAC;IAEK,GAAG,CAAC,OAAY,EAAE,IAAiC;;YACrD,IAAI,MAAM,GAAqB,EAAE,CAAC;YAElC,IAAI,CAAC;gBACD,MAAM,IAAI,EAAE,CAAC;gBACb,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACxB,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC;oBACrD,IAAI;wBACA,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;oBAC5B,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;oBAC3B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;gBAC1B,CAAC;YACL,CAAC;YACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,IAAI,GAAG,CAAC;gBACvC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAkB,KAAK,CAAC,YAAY,iCAAe,CAAC,CAAC,CAAC,CAAC;oBAC1G,IAAI,OAAO,GAAG,IAAI,CAAC;oBACnB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAkB;wBACpC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;4BACpC,OAAO,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;4BAC9B,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC,CAAC,CAAC;wBACH,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,gBAAgB,GAAG,OAAO,CAAC;gBACtC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBACxE,CAAC;gBACD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC9C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACvC,CAAC;gBAED,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;gBACzB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;YAC1B,CAAC;QACL,CAAC;KAAA;CACJ,CAAA;AA5CY,uBAAuB;IADnC,gCAAU,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;qCAEc,eAAM;GADpC,uBAAuB,CA4CnC;AA5CY,0DAAuB","sourcesContent":["import {KoaMiddlewareInterface, Middleware} from \"routing-controllers\";\nimport {ValidationError} from \"class-validator\";\nimport {Logger} from \"../../common/Logger\";\nimport {IResult} from \"./IResult\";\n\n@Middleware({type: \"before\"})\nexport class ResultWarpperMiddleware implements KoaMiddlewareInterface {\n    constructor(private readonly m_logger: Logger) {\n    }\n\n    async use(context: any, next: (err?: any) => Promise<any>): Promise<any> {\n        let result: IResult = <IResult>{};\n\n        try {\n            await next();\n            if (!(context.status.toString().slice(0, 1) === \"4\") && !(context.status.toString().slice(0, 1) === \"5\")) {\n                if (!!context.body.httpCode)\n                    result.IsSuccess = context.body.httpCode === 200;\n                else\n                    result.IsSuccess = true;\n                result.Data = context.body;\n                context.body = result;\n            }\n        }\n        catch (error) {\n            context.status = error.httpCode || 500;\n            if (Array.isArray(error.errors) && error.errors.every((v: ValidationError) => v instanceof ValidationError)) {\n                let message = null;\n                error.errors.forEach((v: ValidationError) => {\n                    Object.keys(v.constraints).forEach((type) => {\n                        message = v.constraints[type];\n                        return false;\n                    });\n                    return false;\n                });\n\n                result.ExceptionMessage = message;\n            } else {\n                result.ExceptionMessage = !!error.message ? error.message : \"预期外错误\";\n            }\n            if (context.status === 500) {\n                this.m_logger.error(error.message, error);\n            } else {\n                this.m_logger.error(error.message);\n            }\n\n            result.IsSuccess = false;\n            context.body = result;\n        }\n    }\n}"]}