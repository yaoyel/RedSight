{"version":3,"file":"server.js","sourceRoot":"","sources":["../../src/server.ts"],"names":[],"mappings":";;AAAA,4BAA0B,CAAE,uFAAuF;AACnH,iCAAiC;AACjC,mCAAiC;AACjC,qCAAwD;AACxD,6DAAyF;AACzF,iCAAyD;AAEzD,iCAAiC;AACjC,gCAAgC;AAGhC,wBAAwB;AACxB,kBAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAoB,4BAA4B;AAChF,sBAAe,CAAC,kBAAS,CAAC,CAAC;AAC3B,yBAAkB,CAAC,IAAI,CAAC,CAAC,CAA2B,yCAAyC;AAE7F,kCAAmB,CAAC,kBAAS,CAAC,CAAC;AAC/B,MAAM,MAAM,GAAG,qCAAe,CAAC,oBAAa,EAAE,CAAC,CAAC;AAChD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpB,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC","sourcesContent":["import \"reflect-metadata\";  // This package should be imported before `typedi`, `typeorm` and `routing-controllers`\nimport * as config from \"config\";\nimport {Container} from \"typedi\";\nimport {useContainer as ormUseContainer} from \"typeorm\";\nimport {useContainer as routingUseContainer, createKoaServer} from \"routing-controllers\";\nimport {getKoaOptions, initializeDatabase} from \"./core\";\n\n// import \"./webapi/middlewares\";\n// import \"./common/HttpHelper\";\n\n\n/* Setup DI container */\nContainer.set(\"config\", config);                    // TODO: \"config\" 在其他地方有用到吗？\normUseContainer(Container);\ninitializeDatabase(true);                           // TODO: 根据 TypeORM 文档，重建数据库可以通过命令行的方式进行？\n\nroutingUseContainer(Container);\nconst koaApp = createKoaServer(getKoaOptions());\nkoaApp.listen(3000);\nconsole.log(\"Server is up and running at port 3000\");\n"]}