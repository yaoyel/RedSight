{"version":3,"file":"PasswordValidator.js","sourceRoot":"","sources":["../../../../src/common/validators/PasswordValidator.ts"],"names":[],"mappings":";;;;;;;;AAAA,qDAAuG;AAGvG,IAAa,iBAAiB,GAA9B;IACI,cAAc,CAAC,IAAyB;QACpC,MAAM,CAAC,aAAa,CAAC;IACzB,CAAC;IAED,QAAQ,CAAC,IAAY,EAAE,IAAyB;QAC5C,MAAM,SAAS,GAAG,8CAA8C,CAAC;QACjE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;CACJ,CAAA;AATY,iBAAiB;IAD7B,qCAAmB,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC;GACzC,iBAAiB,CAS7B;AATY,8CAAiB","sourcesContent":["import {ValidationArguments, ValidatorConstraint, ValidatorConstraintInterface} from \"class-validator\";\n\n@ValidatorConstraint({name: \"password\", async: false})\nexport class PasswordValidator implements ValidatorConstraintInterface {\n    defaultMessage(args: ValidationArguments): string {\n        return \"密码必须包含字母或数字\";\n    }\n\n    validate(text: string, args: ValidationArguments): Promise<boolean> | boolean {\n        const regString = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,16}$/;\n        return regString.test(text);\n    }\n}\n\n"]}