{"version":3,"file":"AuthController.js","sourceRoot":"","sources":["../../../../src/webapi/controllers/AuthController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,4BAA0B;AAC1B,6DAAqE;AACrE,mCAA0C;AAC1C,oCAAiC;AACjC,oDAA8C;AAC9C,8DAAyD;AAEzD,yEAA8D;AAI9D,IAAa,cAAc,GAA3B;IACI,YAAkE,gBAAgC;QAAhC,qBAAgB,GAAhB,gBAAgB,CAAgB;IAClG,CAAC;IAGY,KAAK,CACQ,WAAmB;;YAEzC,MAAM,OAAO,GAAG,IAAI,kBAAO,EAA8B,CAAC;YAC1D,IAAI,KAAK,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,EAAC,WAAW,EAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3F,EAAE,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;YAE5E,MAAM,KAAK,GAAG,MAAM,eAAO,CAAC,EAAC,WAAW,EAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;KAAA;CAEJ,CAAA;AAXG;IADC,0BAAI,CAAC,qBAAqB,CAAC;IAEvB,WAAA,2BAAK,CAAC,aAAa,CAAC,CAAA;;;;2CAQxB;AAdQ,cAAc;IAF1B,gBAAO,EAAE;IACT,oCAAc,CAAC,OAAO,CAAC;IAEP,WAAA,+CAAmB,CAAC,+BAAc,CAAC,CAAA;qCAAoC,+BAAc;GADzF,cAAc,CAgB1B;AAhBY,wCAAc","sourcesContent":["import \"reflect-metadata\";\nimport {JsonController, Get, Post, Param} from \"routing-controllers\";\nimport {Service, Container} from \"typedi\";\nimport {signJwt} from \"../utils\";\nimport {Checker} from \"../../common/Checkers\";\nimport {UserRepository} from \"../../data/UserRepository\";\nimport {UserEntity} from \"../../data/entities/UserEntity\";\nimport {OrmCustomRepository} from \"typeorm-typedi-extensions\";\n\n@Service()\n@JsonController(\"/auth\")\nexport class AuthController {\n    constructor(@OrmCustomRepository(UserRepository) private readonly m_userRepository: UserRepository) {\n    }\n\n    @Post(\"/token/:phonenumber\")\n    public async token(\n        @Param(\"phonenumber\") phoneNumber: string\n    ) {\n        const checker = new Checker<UserEntity, UserRepository>();\n        let check = await checker.notExistCheck({phoneNumber}, this.m_userRepository, null, false);\n        if (check) await this.m_userRepository.createUserByPhoneNumber(phoneNumber);\n\n        const token = await signJwt({phoneNumber}, \"1h\", \"RS256\");\n        return token;\n    }\n\n}"]}